name: Maven Package CI

on:
  push:
  pull_request:
  release:
    types: [published, edited]
  workflow_dispatch:
    inputs:
      version:
        description: dummy
        default: dummy

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:

    - name: freespace_1
      run: |
        df -h

#    - name: Maximize build space
#      uses: easimon/maximize-build-space@master
#      with:
#        root-reserve-mb: 512
#        swap-size-mb: 1024
#        remove-dotnet: 'true'

    - name: freespace_2
      run: |
        df -h

    - name: Checkout
      uses: actions/checkout@v3

    - name: install basic android SDK
      run: |
           sudo apt update && \
           sudo DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends \
           android-sdk \
           lsb-release \
           clang \
           cmake \
           libconfig-dev \
           libgtest-dev \
           ninja-build \
           pkg-config \
           zip grep file ca-certificates autotools-dev autoconf automake \
           git bc wget rsync cmake make pkg-config libtool \
           ssh gzip tar \
           coreutils \
           curl \
           libncurses5 \
           wget \
           git \
           curl \
           software-properties-common \
           unzip \
           zip \
           automake \
           autotools-dev \
           build-essential \
           check \
           checkinstall \
           libtool \
           libfreetype6-dev \
           fontconfig-config \
           libfontconfig1-dev \
           pkg-config \
           openjdk-8-jdk

    - name: Install NDK
      run: |
           echo ${ANDROID_SDK_ROOT}
           # find / -name sdkmanager 2>/dev/null
           ls -al /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager
           set -x
           echo "y" | sudo /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --install "ndk;21.0.6113669" --sdk_root=${ANDROID_SDK_ROOT}
           echo "y" | sudo /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --install "ndk;20.1.5948944" --sdk_root=${ANDROID_SDK_ROOT}
           # sdkmanager --update
           # sdkmanager 'cmdline-tools;latest'
           # sdkmanager --uninstall 'cmdline-tools;1.0'

    - name: pkgs
      run: |
           sudo apt update && \
           sudo DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends \
           clang \
           cmake \
           libconfig-dev \
           libgtest-dev \
           ninja-build \
           pkg-config \
           zip grep file ca-certificates autotools-dev autoconf automake \
           git bc wget rsync cmake make pkg-config libtool \
           ssh gzip tar \
           coreutils \
           libncurses5

    - name: use mnt dir
      run: |
           sudo mkdir -p /root/work/
           sudo mv -v /root/work /mnt/
           sudo ls -al /mnt
           sudo bash -c "cd /root/ ; ln -s /mnt/work; ls -al"

    - name: move_source
      run: |
           sudo mkdir -p /root/work/jni-c-toxcore/
           sudo cp -av /home/runner/work/ToxAndroidRefImpl/ToxAndroidRefImpl/jni-c-toxcore/* /root/work/jni-c-toxcore/
           sudo mkdir -p /root/work/android-refimpl-app/
           sudo cp -av /home/runner/work/ToxAndroidRefImpl/ToxAndroidRefImpl/android-refimpl-app/* /root/work/android-refimpl-app/
           # sudo git clone https://github.com/zoff99/ToxAndroidRefImpl /root/work/trifa_master_src
           # sudo mkdir -p /root/work/android-refimpl-app/app/
           # sudo cp -av /root/work/trifa_master_src/android-refimpl-app/app/* /root/work/android-refimpl-app/app/

    - name: check java versions installed
      run: |
           echo $JAVA_HOME||echo "NO ERR"
           sudo rm -Rf /usr/lib/jvm/temurin-11-jdk-amd64
           sudo rm -Rf /usr/bin/java /bin/java
           dpkg -l|grep -i jdk
           dpkg -l|grep -i java

    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: check java versions installed
      run: |
           echo $JAVA_HOME||echo "NO ERR"
           type -a java

    - name: freespace_3
      run: |
        df -h

    - name: build_maven_deps
      run: |
           export JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.422/x64
           java -version
           sudo mkdir -p ~/work/deploy
           sudo mkdir -p ~/.android/
           sudo touch ~/.android/debug.keystore
           sudo mkdir -p build_dir
           sudo mkdir -p /home/runner/work/ToxAndroidRefImpl/ToxAndroidRefImpl/build_dir
           pwd
           ls -al
           sudo bash -c "export JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.422/x64;cd /home/runner/work/ToxAndroidRefImpl/ToxAndroidRefImpl/build_dir/;../circle_scripts/deps.sh"

    - name: build_maven_pkg
      run: |
           pwd
           export JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.422/x64
           sudo bash -c "export JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.422/x64;cd /home/runner/work/ToxAndroidRefImpl/ToxAndroidRefImpl/build_dir/;../circle_scripts/trifa.sh '../'"

    - name: acls_maven_pkg
      run: |
           export JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.422/x64
           sudo chmod -R a+rx /root/work/artefacts/
           sudo chmod a+r /root/work//artefacts//local_maven_trifa_jni_.zip
           sudo ls -al /root/work/artefacts/
           sudo cp -av /root/work/artefacts/*.zip /home/runner/work/
           echo "exit 0 here"

    - name: upload apk
      uses: actions/upload-artifact@v2
      with:
        name: local_maven_trifa_jni_1.x.yy.zip
        path: /home/runner/work/*.zip

